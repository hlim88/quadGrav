#!/usr/bin/perl

######################################################################
#
# this script reads optimized fortran generated by maple, searches
# for unique variables beginning with t or s, then generates a 
# fortran style declaration for them
#
######################################################################

$number_vars_per_line = 5;
@tmpvars = ();

while (<>) {
   if (/(t\d*)/){
      $var = $1;
      $unique= 1;
      if ($var eq "t") {
        $unique = 0;
      } 
      else {
        foreach $element (@tmpvars) {
           if ($var eq $element) {
              $unique--;}
        }  
      }  
      if ($unique == 1) {
         push(@tmpvars, $1);
      }
   }
   if (/(s\d*)/){
      $var = $1;
      $unique= 1;
      if ($var eq "s") {
        $unique = 0;
      }
      else {
        foreach $element (@tmpvars) {
           if ($var eq $element) {
              $unique--;}
        }
      }
      if ($unique == 1) {
         push(@tmpvars, $1);
      }
   }

}


$k = 0;
while ($k < $#tmpvars + 1) {
   $j = 0;
   @list = ();
   while ($k < $#tmpvars+1 && $j < $number_vars_per_line) {
      push(@list," $tmpvars[$k]");
      $j++;
      $k++;
   }
   $commaline = join(',',@list);
   print "      real*8 $commaline\n";
}

