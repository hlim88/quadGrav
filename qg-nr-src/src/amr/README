11/04/03:   Project to model scalar field using MOL Runge-Kutte 3.
            Idea is to demonstrate RK3 time-stepping with my distributed
            AMR code. Once this is done, presumably it should be straightforward
            for the LSU group to bring their full Hyper2 stuff into it, in
            particular the scalar field on a Kerr background.

            Steps:

            Exported nlsm3d_mpiad project, untarred into kgrk.

            Got rid of /examples, /run, /src/src_rnpl, and some misc files.

            Change Makefile and replace nlsm w/ kgrk:
                sed "s/nlsm/kgrk/g" Makefile > .junk ; mv .junk Makefile

            Edit fields.inc to declare fields we'll need

            Edit id file

            Edit problem.f:
                grid_comp_deriv --- strip out call update1() for now
                grid_iter       --- need dissipation!
                grid_init_t0    --- simplify, stripping out derivatives

            Edit updates.f:
                Ripped out what's there, put in hand-coded:
                calc_rhs        --- computes rhs for wave equation
                rk_advance      --- general time stepper based on RHS as input
                update1         --- new code to compute derived quant's

            Edit level_lib.f:
                Line 1407: change so that level_apply() only does 3 iterations

#=========================================================================
#
# Fri Feb  6 12:32:25 CST 2004
#
#    Dave
#
#=========================================================================

I am beginning to import the hyper code.  Some changes:

  (1) Variables mostly now defined using F90 conventions, e.g.,
      real(kind=8) instead of real*8.  This cosmetic change was
      done to minimize the number of warnings that the Intel compiler
      generates.
  (2) The source code is now assumed to follow the standard 72 column format,
      or the code generated by perl scripts does not compile properly

  (2a) All comments delimited by "!" may not extend beyond column 72.

  (3) I added the file .ENV_dux to set my personal environment variables
      on dux.phys.lsu.edu, but they may be useful on other machines.

  (4) I added an ../sbin directory for perl scripts that generate
      interface routines, process fortran code, etc.

  (5) The code will not compile yet, but Steve will now work on some
      near final issues.  I will then add the entire hyper source code.

