#!/usr/bin/perl
#
# Usage: freeform [-b] [file ...] > outfile
#
# Convert to F90 free format - start comments with '!' and put '&'
# for continuations.
#
# -b option is for maintaining backwards (f77) compatibility
#
# BUGS: the $in_string flag is always true because I'm not sure
#       how to check for it.
#
# Written by:
#	Kate Hedstrom
#	kate@ahab.rutgers.edu
#
#require 'getopts.pl';
#do Getopts(b);
use Getopt::Std;
getopt(b);
$comment_char = '!';
$cont_char = '&';
$old = "";
$comment = "";
$in_string = 1;
#
# main loop
#
while (<>) {
	$new = $_;
#
# Delete trailing blanks and tabs
#
	$new =~ s/[ \t]*$//;
#
# Save comments, converting to '!' comments.  Note that "comments"
# include C preprocessor lines and blank lines.
#
	if ($new =~ /^[*c#!]|^$/i) {
		if ($new =~ /^[*c]/i) {
			substr($new,0,1) = $comment_char;
		}
		$comment .= $new;
		next;
	}
#
# Replace tabs with spaces
#
	$new =~ s/\t/        /g;
#
# Look for continues, make sure continuation is '&' if backward
# compatible or in a string
#
	if (substr($new,5,1) ne " " and substr($new,5,1)) {
		if ($opt_b || $in_string) {
			substr($new,5,1) = $cont_char;
		} else {
			substr($new,5,1) = ' ';
		}

#
# Check for ! comments in previous line, put & in column 73 and before !
#
		if ( ($pos = index($old,"!")) >= $[ ) {
			if ($opt_b && $pos < 72) {
				$pad = 72 - $pos;
			} else {
				$pad = 1;
			}
			substr($old,$pos,0) = ' ' x $pad . $cont_char;
		} else {
			$len = length($old);     # includes a '\n'
			if ($opt_b && $len < 73) {
				$pad = 73 - length($old);
			} else {
				$pad = 1;
			}
			substr($old,$len-1,0) = ' ' x $pad . $cont_char;
		}
        }
#
# Print $old and any "comments"
#
	print $old;
	print $comment;
	$comment = "";
	$old = $new;
}
#
# Print the last $old and "comments"
#
print $old;
print $comment;

